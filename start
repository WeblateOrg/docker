#!/bin/sh
set -e

export PGPASSWORD=$(echo $POSTGRES_PASSWORD)

export WEBLATE_CMD="/usr/local/bin/weblate"

run_weblate() {
    sudo -u weblate -E $WEBLATE_CMD "$@"
}

if [ -z "$POSTGRES_HOST" ] ; then
    export POSTGRES_HOST=database
fi
if [ -z "$POSTGRES_PORT" ] ; then
    export POSTGRES_PORT=
fi

# Wait for database to get available
until psql -h "$POSTGRES_HOST" -p "$POSTGRES_PORT" -d "$POSTGRES_DATABASE" -U "$POSTGRES_USER" -c 'SELECT 1' > /dev/null 2>&1 ; do
  >&2 echo "Postgres is unavailable - sleeping"
  sleep 1
done

unset PGPASSWORD

>&2 echo "Postgres is up"

# Generate secret
if [ ! -f /app/data/secret ] ; then
    # https://github.com/django/django/blob/1.10.2/django/utils/crypto.py#L54-L56
    python -c "from django.utils.crypto import get_random_string; print get_random_string(50)" > /app/data/secret
fi

# Migrate database to current version and collect static files
if [ "x$1" = "xrunserver" ] ; then
    run_weblate migrate
    run_weblate collectstatic --noinput
    if [ -n "$WEBLATE_ADMIN_PASSWORD" ] ; then
        # This will fail on consequent runs
        run_weblate createadmin --password="$WEBLATE_ADMIN_PASSWORD" --update --email="$WEBLATE_ADMIN_EMAIL" --name="$WEBLATE_ADMIN_NAME" || true
    fi
    if [ -n "$WEBLATE_ALLOWED_HOSTS" ] ; then
        run_weblate changesite --set-name "${WEBLATE_ALLOWED_HOSTS%%,*}"
    fi
    # Create supervisor log dirs and files
    LOGFILE=/var/log/supervisor/supervisord.log
    mkdir -p `dirname $LOGFILE`
    touch $LOGFILE
    # uswgi dir
    mkdir -p /run/uwsgi/app/weblate
    chown weblate:weblate /run/uwsgi/app/weblate
    #  Execute supervisor
    exec supervisord --nodaemon --loglevel=debug
fi

# Start the management command
run_weblate "$@"
